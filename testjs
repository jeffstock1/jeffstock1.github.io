<!-- HTML table with headers -->
<table id="myTable">
  <thead>
    <tr>
      <th>First Name</th>
      <th>Last Name</th>
      <th>Age</th>
      <th>Email</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>John</td>
      <td>Doe</td>
      <td>30</td>
      <td>john@example.com</td>
    </tr>
    <tr>
      <td>Jane</td>
      <td>Doe</td>
      <td>25</td>
      <td>jane@example.com</td>
    </tr>
    <tr>
      <td>Bob</td>
      <td>Smith</td>
      <td>40</td>
      <td>bob@example.com</td>
    </tr>
  </tbody>
</table>

<!-- JavaScript code to filter and sort the table -->
<script>
  const table = document.getElementById('myTable');
  const headers = table.querySelectorAll('thead th');
  const rows = table.querySelectorAll('tbody tr');
  
  // Add event listeners to the headers
  headers.forEach(header => {
    header.addEventListener('click', () => {
      const column = header.dataset.column;
      const order = header.dataset.order;
      const newOrder = order === 'desc' ? 'asc' : 'desc';
      
      // Remove the active class from all headers
      headers.forEach(header => {
        header.classList.remove('active');
        header.removeAttribute('data-order');
      });
      
      // Set the active class and order on the clicked header
      header.classList.add('active');
      header.dataset.order = newOrder;
      
      // Sort the rows based on the clicked header
      const sortedRows = Array.from(rows);
      const direction = newOrder === 'asc' ? 1 : -1;
      sortedRows.sort((a, b) => {
        const aCol = a.querySelector(`td:nth-child(${column + 1})`).textContent;
        const bCol = b.querySelector(`td:nth-child(${column + 1})`).textContent;
        return aCol > bCol ? direction : -direction;
      });
      
      // Clear the table body and append the sorted rows
      rows.forEach(row => table.removeChild(row));
      sortedRows.forEach(row => table.appendChild(row));
    });
  });
  
  // Add event listener to the search input
  const searchInput = document.getElementById('searchInput');
  searchInput.addEventListener('input', () => {
    const searchTerm = searchInput.value.toLowerCase();
    
    rows.forEach(row => {
      const cells = row.querySelectorAll('td');
      let rowMatches = false;
      
      cells.forEach(cell => {
        const cellText = cell.textContent.toLowerCase();
        if (cellText.includes(searchTerm)) {
          rowMatches = true;
        }
      });
      
      if (rowMatches) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  });
</script>
